// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/zalando/postgres-operator/pkg/util/config

package config

import (
	"time"
	"k8s.io/api/core/v1"
)

// CRD describes CustomResourceDefinition specific configuration parameters
#CRD: {
	ReadyWaitInterval:      time.#Duration
	ReadyWaitTimeout:       time.#Duration
	ResyncPeriod:           time.#Duration
	RepairPeriod:           time.#Duration
	EnableCRDRegistration?: null | bool @go(,*bool)
	EnableCRDValidation?:   null | bool @go(,*bool)
	CRDCategories: [...string] @go(,[]string)
}

// Resources describes kubernetes resource specific configuration parameters
#Resources: {
	ResourceCheckInterval:          time.#Duration
	ResourceCheckTimeout:           time.#Duration
	PodLabelWaitTimeout:            time.#Duration
	PodDeletionWaitTimeout:         time.#Duration
	PodTerminateGracePeriod:        time.#Duration
	SpiloRunAsUser?:                null | int64 @go(,*int64)
	SpiloRunAsGroup?:               null | int64 @go(,*int64)
	SpiloFSGroup?:                  null | int64 @go(,*int64)
	PodPriorityClassName:           string
	ClusterDomain:                  string
	SpiloPrivileged:                bool
	SpiloAllowPrivilegeEscalation?: null | bool @go(,*bool)
	AdditionalPodCapabilities: [...string] @go(,[]string)
	ClusterLabels: {[string]: string} @go(,map[string]string)
	InheritedLabels: [...string] @go(,[]string)
	InheritedAnnotations: [...string] @go(,[]string)
	DownscalerAnnotations: [...string] @go(,[]string)
	IgnoredAnnotations: [...string] @go(,[]string)
	ClusterNameLabel:        string
	DeleteAnnotationDateKey: string
	DeleteAnnotationNameKey: string
	PodRoleLabel:            string
	PodToleration: {[string]: string} @go(,map[string]string)
	DefaultCPURequest:       string
	DefaultMemoryRequest:    string
	DefaultCPULimit:         string
	DefaultMemoryLimit:      string
	MinCPULimit:             string
	MinMemoryLimit:          string
	MaxCPURequest:           string
	MaxMemoryRequest:        string
	PodEnvironmentConfigMap: string
	PodEnvironmentSecret:    string
	NodeReadinessLabel: {[string]: string} @go(,map[string]string)
	NodeReadinessLabelMerge:           string
	ShmVolume?:                        null | bool @go(,*bool)
	MaxInstances:                      int32
	MinInstances:                      int32
	IgnoreInstanceLimitsAnnotationKey: string
}

#InfrastructureRole: {
	// Name of a secret which describes the role, and optionally name of a
	// configmap with an extra information
	SecretName:       string
	UserKey:          string
	PasswordKey:      string
	RoleKey:          string
	DefaultUserValue: string
	DefaultRoleValue: string

	// This field point out the detailed yaml definition of the role, if exists
	Details:  string
	Template: bool
}

// Auth describes authentication specific configuration parameters
#Auth: {
	SecretNameTemplate:            #StringTemplate
	PamRoleName:                   string
	PamConfiguration:              string
	TeamsAPIUrl:                   string
	OAuthTokenSecretName:          string
	InfrastructureRolesSecretName: string
	InfrastructureRoles: [...null | #InfrastructureRole] @go(,[]*InfrastructureRole)
	InfrastructureRolesDefs: string
	SuperUsername:           string
	ReplicationUsername:     string
	AdditionalOwnerRoles: [...string] @go(,[]string)
	EnablePasswordRotation:        bool
	PasswordRotationInterval:      uint32
	PasswordRotationUserRetention: uint32
}

// Scalyr holds the configuration for the Scalyr Agent sidecar for log shipping:
#Scalyr: {
	ScalyrAPIKey:        string
	ScalyrImage:         string
	ScalyrServerURL:     string
	ScalyrCPURequest:    string
	ScalyrMemoryRequest: string
	ScalyrCPULimit:      string
	ScalyrMemoryLimit:   string
}

// LogicalBackup defines configuration for logical backup
#LogicalBackup: {
	LogicalBackupSchedule:                     string
	LogicalBackupDockerImage:                  string
	LogicalBackupProvider:                     string
	LogicalBackupAzureStorageAccountName:      string
	LogicalBackupAzureStorageContainer:        string
	LogicalBackupAzureStorageAccountKey:       string
	LogicalBackupS3Bucket:                     string
	LogicalBackupS3Region:                     string
	LogicalBackupS3Endpoint:                   string
	LogicalBackupS3AccessKeyID:                string
	LogicalBackupS3SecretAccessKey:            string
	LogicalBackupS3SSE:                        string
	LogicalBackupS3RetentionTime:              string
	LogicalBackupGoogleApplicationCredentials: string
	LogicalBackupJobPrefix:                    string
	LogicalBackupCPURequest:                   string
	LogicalBackupMemoryRequest:                string
	LogicalBackupCPULimit:                     string
	LogicalBackupMemoryLimit:                  string
}

// Operator options for connection pooler
#ConnectionPooler: {
	NumberOfInstances?:                   null | int32 @go(,*int32)
	Schema:                               string
	User:                                 string
	Image:                                string
	Mode:                                 string
	MaxDBConnections?:                    null | int32 @go(,*int32)
	ConnectionPoolerDefaultCPURequest:    string
	ConnectionPoolerDefaultMemoryRequest: string
	ConnectionPoolerDefaultCPULimit:      string
	ConnectionPoolerDefaultMemoryLimit:   string
}

// Config describes operator config
#Config: {
	CRD:                     #CRD
	Resources:               #Resources
	Auth:                    #Auth
	Scalyr:                  #Scalyr
	LogicalBackup:           #LogicalBackup
	ConnectionPooler:        #ConnectionPooler
	WatchedNamespace:        string
	KubernetesUseConfigMaps: bool
	EtcdHost:                string
	DockerImage:             string
	SidecarImages: {[string]: string} @go(,map[string]string)
	SidecarContainers: [...v1.#Container] @go(,[]v1.Container)
	PodServiceAccountName: string

	// value of this string must be valid JSON or YAML; see initPodServiceAccount
	PodServiceAccountDefinition:            string
	PodServiceAccountRoleBindingDefinition: string
	MasterPodMoveTimeout:                   time.#Duration
	DbHostedZone:                           string
	AWSRegion:                              string
	WALES3Bucket:                           string
	LogS3Bucket:                            string
	KubeIAMRole:                            string
	WALGSBucket:                            string
	GCPCredentials:                         string
	WALAZStorageAccount:                    string
	AdditionalSecretMount:                  string
	AdditionalSecretMountPath:              string
	EnableEBSGp3Migration:                  bool
	EnableEBSGp3MigrationMaxSize:           int64
	DebugLogging:                           bool
	EnableDBAccess:                         bool
	EnableTeamsAPI:                         bool
	EnableTeamSuperuser:                    bool
	TeamAdminRole:                          string
	RoleDeletionSuffix:                     string
	EnableTeamMemberDeprecation:            bool
	EnableAdminRoleForUsers:                bool
	EnablePostgresTeamCRD:                  bool
	EnablePostgresTeamCRDSuperusers:        bool
	EnableMasterLoadBalancer:               bool
	EnableMasterPoolerLoadBalancer:         bool
	EnableReplicaLoadBalancer:              bool
	EnableReplicaPoolerLoadBalancer:        bool
	CustomServiceAnnotations: {[string]: string} @go(,map[string]string)
	CustomPodAnnotations: {[string]: string} @go(,map[string]string)
	EnablePodAntiAffinity:                    bool
	PodAntiAffinityPreferredDuringScheduling: bool
	PodAntiAffinityTopologyKey:               string
	StorageResizeMode:                        string
	EnableLoadBalancer?:                      null | bool @go(,*bool)
	ExternalTrafficPolicy:                    string
	MasterDNSNameFormat:                      #StringTemplate
	MasterLegacyDNSNameFormat:                #StringTemplate
	ReplicaDNSNameFormat:                     #StringTemplate
	ReplicaLegacyDNSNameFormat:               #StringTemplate
	PDBNameFormat:                            #StringTemplate
	EnablePodDisruptionBudget?:               null | bool @go(,*bool)
	EnableInitContainers?:                    null | bool @go(,*bool)
	EnableSidecars?:                          null | bool @go(,*bool)
	SharePgSocketWithSidecars?:               null | bool @go(,*bool)
	Workers:                                  uint32
	APIPort:                                  int
	RingLogLines:                             int
	ClusterHistoryEntries:                    int
	TeamAPIRoleConfiguration: {[string]: string} @go(,map[string]string)
	PodTerminateGracePeriod: time.#Duration
	PodManagementPolicy:     string
	EnableReadinessProbe:    bool
	ProtectedRoles: [...string] @go(,[]string)
	PostgresSuperuserTeams: [...string] @go(,[]string)
	SetMemoryRequestToLimit:       bool
	EnableLazySpiloUpgrade:        bool
	EnableCrossNamespaceSecret:    bool
	EnablePgVersionEnvVar:         bool
	EnableSpiloWalPathCompat:      bool
	EnableTeamIdClusternamePrefix: bool
	MajorVersionUpgradeMode:       string
	MajorVersionUpgradeTeamAllowList: [...string] @go(,[]string)
	MinimalMajorVersion:        string
	TargetMajorVersion:         string
	PatroniAPICheckInterval:    time.#Duration
	PatroniAPICheckTimeout:     time.#Duration
	EnablePatroniFailsafeMode?: null | bool @go(,*bool)
}
