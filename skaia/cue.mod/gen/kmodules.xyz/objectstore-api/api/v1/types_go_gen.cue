// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go kmodules.xyz/objectstore-api/api/v1

package v1

import core "k8s.io/api/core/v1"

// Deprecated: Use kmodules.xyz/constants/aws
#AWS_ACCESS_KEY_ID: "AWS_ACCESS_KEY_ID"

// Deprecated: Use kmodules.xyz/constants/aws
#AWS_SECRET_ACCESS_KEY: "AWS_SECRET_ACCESS_KEY"

// Deprecated: Use kmodules.xyz/constants/aws
#CA_CERT_DATA: "CA_CERT_DATA"

// Deprecated: Use kmodules.xyz/constants/google
#GOOGLE_PROJECT_ID: "GOOGLE_PROJECT_ID"

// Deprecated: Use kmodules.xyz/constants/google
#GOOGLE_SERVICE_ACCOUNT_JSON_KEY: "GOOGLE_SERVICE_ACCOUNT_JSON_KEY"

// Deprecated: Use kmodules.xyz/constants/google
#GOOGLE_APPLICATION_CREDENTIALS: "GOOGLE_APPLICATION_CREDENTIALS"

// Deprecated: Use kmodules.xyz/constants/azure
#AZURE_ACCOUNT_NAME: "AZURE_ACCOUNT_NAME"

// Deprecated: Use kmodules.xyz/constants/azure
#AZURE_ACCOUNT_KEY: "AZURE_ACCOUNT_KEY"

// swift
// Deprecated: Use kmodules.xyz/constants/openstack
#OS_USERNAME: "OS_USERNAME"

// Deprecated: Use kmodules.xyz/constants/openstack
#OS_PASSWORD: "OS_PASSWORD"

// Deprecated: Use kmodules.xyz/constants/openstack
#OS_REGION_NAME: "OS_REGION_NAME"

// Deprecated: Use kmodules.xyz/constants/openstack
#OS_AUTH_URL: "OS_AUTH_URL"

// v3 specific
// Deprecated: Use kmodules.xyz/constants/openstack
#OS_USER_DOMAIN_NAME: "OS_USER_DOMAIN_NAME"

// Deprecated: Use kmodules.xyz/constants/openstack
#OS_PROJECT_NAME: "OS_PROJECT_NAME"

// Deprecated: Use kmodules.xyz/constants/openstack
#OS_PROJECT_DOMAIN_NAME: "OS_PROJECT_DOMAIN_NAME"

// v2 specific
// Deprecated: Use kmodules.xyz/constants/openstack
#OS_TENANT_ID: "OS_TENANT_ID"

// Deprecated: Use kmodules.xyz/constants/openstack
#OS_TENANT_NAME: "OS_TENANT_NAME"

// v1 specific
// Deprecated: Use kmodules.xyz/constants/openstack
#ST_AUTH: "ST_AUTH"

// Deprecated: Use kmodules.xyz/constants/openstack
#ST_USER: "ST_USER"

// Deprecated: Use kmodules.xyz/constants/openstack
#ST_KEY: "ST_KEY"

// Manual authentication
// Deprecated: Use kmodules.xyz/constants/openstack
#OS_STORAGE_URL: "OS_STORAGE_URL"

// Deprecated: Use kmodules.xyz/constants/openstack
#OS_AUTH_TOKEN: "OS_AUTH_TOKEN"

#Backend: {
	storageSecretName?: string                 @go(StorageSecretName) @protobuf(1,bytes,opt)
	local?:             null | #LocalSpec      @go(Local,*LocalSpec) @protobuf(2,bytes,opt)
	s3?:                null | #S3Spec         @go(S3,*S3Spec) @protobuf(3,bytes,opt)
	gcs?:               null | #GCSSpec        @go(GCS,*GCSSpec) @protobuf(4,bytes,opt)
	azure?:             null | #AzureSpec      @go(Azure,*AzureSpec) @protobuf(5,bytes,opt)
	swift?:             null | #SwiftSpec      @go(Swift,*SwiftSpec) @protobuf(6,bytes,opt)
	b2?:                null | #B2Spec         @go(B2,*B2Spec) @protobuf(7,bytes,opt)
	rest?:              null | #RestServerSpec @go(Rest,*RestServerSpec) @protobuf(8,bytes,opt)
}

#LocalSpec: {
	core.#VolumeSource
	mountPath: string @go(MountPath) @protobuf(2,bytes,opt)
	subPath?:  string @go(SubPath) @protobuf(3,bytes,opt)
}

#S3Spec: {
	endpoint: string @go(Endpoint) @protobuf(1,bytes,opt)
	bucket:   string @go(Bucket) @protobuf(2,bytes,opt)
	prefix?:  string @go(Prefix) @protobuf(3,bytes,opt)
	region?:  string @go(Region) @protobuf(4,bytes,opt)
}

#GCSSpec: {
	bucket:          string @go(Bucket) @protobuf(1,bytes,opt)
	prefix?:         string @go(Prefix) @protobuf(2,bytes,opt)
	maxConnections?: int64  @go(MaxConnections) @protobuf(3,varint,opt)
}

#AzureSpec: {
	container:       string @go(Container) @protobuf(1,bytes,opt)
	prefix?:         string @go(Prefix) @protobuf(2,bytes,opt)
	maxConnections?: int64  @go(MaxConnections) @protobuf(3,varint,opt)
}

#SwiftSpec: {
	container: string @go(Container) @protobuf(1,bytes,opt)
	prefix?:   string @go(Prefix) @protobuf(2,bytes,opt)
}

#B2Spec: {
	bucket:          string @go(Bucket) @protobuf(1,bytes,opt)
	prefix?:         string @go(Prefix) @protobuf(2,bytes,opt)
	maxConnections?: int64  @go(MaxConnections) @protobuf(3,varint,opt)
}

#RestServerSpec: {
	url?: string @go(URL) @protobuf(1,bytes,opt)
}
