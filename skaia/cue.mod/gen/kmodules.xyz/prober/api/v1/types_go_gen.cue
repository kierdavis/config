// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go kmodules.xyz/prober/api/v1

package v1

import (
	core "k8s.io/api/core/v1"
	"k8s.io/apimachinery/pkg/util/intstr"
)

// Handler defines a specific action that should be taken
// TODO: pass structured data to these actions, and document that data here.
#Handler: {
	// One and only one of the following should be specified.
	// Exec specifies the action to take.
	// +optional
	exec?: null | core.#ExecAction @go(Exec,*core.ExecAction) @protobuf(1,bytes,opt)

	// HTTPGet specifies the http Get request to perform.
	// +optional
	httpGet?: null | core.#HTTPGetAction @go(HTTPGet,*core.HTTPGetAction) @protobuf(2,bytes,opt)

	// HTTPPost specifies the http Post request to perform.
	// +optional
	httpPost?: null | #HTTPPostAction @go(HTTPPost,*HTTPPostAction) @protobuf(3,bytes,opt)

	// TCPSocket specifies an action involving a TCP port.
	// TCP hooks not yet supported
	// TODO: implement a realistic TCP lifecycle hook
	// +optional
	tcpSocket?: null | core.#TCPSocketAction @go(TCPSocket,*core.TCPSocketAction) @protobuf(4,bytes,opt)

	// ContainerName specifies the name of the container where to execute the commands for Exec probe
	// or where to find the port for HTTP or TCP probe
	// +optional
	containerName?: string @go(ContainerName) @protobuf(5,bytes,opt)
}

// HTTPPostAction describes an action based on HTTP Post requests.
#HTTPPostAction: {
	// Path to access on the HTTP server.
	// +optional
	path?: string @go(Path) @protobuf(1,bytes,opt)

	// Name or number of the port to access on the container.
	// Number must be in the range 1 to 65535.
	// Name must be an IANA_SVC_NAME.
	port: intstr.#IntOrString @go(Port) @protobuf(2,bytes,opt)

	// Host name to connect to, defaults to the pod IP. You probably want to set
	// "Host" in httpHeaders instead.
	// +optional
	host?: string @go(Host) @protobuf(3,bytes,opt)

	// Scheme to use for connecting to the host.
	// Defaults to HTTP.
	// +optional
	scheme?: core.#URIScheme @go(Scheme) @protobuf(4,bytes,opt,casttype=k8s.io/api/core/v1.URIScheme)

	// Custom headers to set in the request. HTTP allows repeated headers.
	// +optional
	httpHeaders?: [...core.#HTTPHeader] @go(HTTPHeaders,[]core.HTTPHeader) @protobuf(5,bytes,rep)

	// Body to set in the request.
	// +optional
	body?: string @go(Body) @protobuf(6,bytes,opt)

	// Form to set in the request body.
	// +optional
	form?: [...#FormEntry] @go(Form,[]FormEntry) @protobuf(7,bytes,rep)
}

#FormEntry: {
	key?: string @go(Key) @protobuf(1,bytes,rep)
	values?: [...string] @go(Values,[]string) @protobuf(2,bytes,rep)
}
