// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go runtime

package runtime

// Maximum number of key/elem pairs a bucket can hold.
_#bucketCntBits: 3
_#bucketCnt:     8

// Maximum average load of a bucket that triggers growth is 6.5.
// Represent as loadFactorNum/loadFactorDen, to allow integer math.
_#loadFactorNum: 13
_#loadFactorDen: 2

// Maximum key or elem size to keep inline (instead of mallocing per element).
// Must fit in a uint8.
// Fast versions cannot handle big elems - the cutoff size for
// fast versions in cmd/compile/internal/gc/walk.go must be at most this elem.
_#maxKeySize:  128
_#maxElemSize: 128

// data offset should be the size of the bmap struct, but needs to be
// aligned correctly. For amd64p32 this means 64-bit alignment
// even though pointers are 32 bit.
_#dataOffset: uint64 & 8

// Possible tophash values. We reserve a few possibilities for special marks.
// Each bucket (including its overflow buckets, if any) will have either all or none of its
// entries in the evacuated* states (except during the evacuate() method, which only happens
// during map writes and thus no one else can observe the map during that time).
_#emptyRest:      0
_#emptyOne:       1
_#evacuatedX:     2
_#evacuatedY:     3
_#evacuatedEmpty: 4
_#minTopHash:     5

// flags
_#iterator:     1
_#oldIterator:  2
_#hashWriting:  4
_#sameSizeGrow: 8

// sentinel bucket ID for iterator checks
_#noCheck: 18446744073709551615

// A header for a Go map.
_#hmap: {
	B: uint8
}

// A hash iteration structure.
// If you modify hiter, also change cmd/compile/internal/reflectdata/reflect.go
// and reflect/value.go to match the layout of this structure.
_#hiter: {
	B: uint8
}

_#maxZero: 1024
